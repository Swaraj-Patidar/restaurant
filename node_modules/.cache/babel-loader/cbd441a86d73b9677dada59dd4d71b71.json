{"ast":null,"code":"var _jsxFileName = \"/home/spatidar/Desktop/React_projects/restaurant/src/ListingPage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; // import RestaurantListItem from './RestaurantListItem';\n// import InfiniteScroll from \"react-infinite-scroll-component\";\n\nimport { thunkRestaurants } from './actions/restaurant';\nimport './styles/Summary.css'; // import LoadingComponent from './LoadingComponent';\n\nclass ListingPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      start: 1\n    }; // this.onScroll=this.onScroll.bind(this);\n  } //   onScroll(){\n  //     var start= this.state.start +5;\n  //     this.setState((state)=>({\n  //       start: state.start+5,\n  //   }));\n  //     this.props.dispatch(thunkRestaurants(this.props.city, start));\n  //   };\n\n\n  componentDidMount() {\n    console.log(\"${this.state.props}\"); // fetch(`https://opentable.herokuapp.com/api/restaurants?city=${this.props.city}`)\n    //   .then(res => res.json())\n    //   .then(\n    //     (result) => {\n    //       this.setState({\n    //         isLoaded: true,\n    //         items: result.items\n    //       });\n    //     },\n    //     // Note: it's important to handle errors here\n    //     // instead of a catch() block so that we don't swallow\n    //     // exceptions from actual bugs in components.\n    //     (error) => {\n    //       this.setState({\n    //         isLoaded: true,\n    //         error\n    //       });\n    //     }\n    //   )\n  }\n\n  render() {\n    console.log(\"Props \" + this.props.city); // const error=this.props.error;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, \"List\"));\n  }\n\n}\n\n;\n\nconst mapStateToProps = ({\n  restaurants,\n  city,\n  error,\n  likes\n}, props) => ({\n  restaurants,\n  city,\n  error,\n  likes\n});\n\nexport default connect(mapStateToProps)(ListingPage);","map":{"version":3,"sources":["/home/spatidar/Desktop/React_projects/restaurant/src/ListingPage.js"],"names":["React","Component","connect","thunkRestaurants","ListingPage","constructor","props","state","start","componentDidMount","console","log","render","city","mapStateToProps","restaurants","error","likes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB,C,CACA;AACA;;AACA,SAAQC,gBAAR,QAA+B,sBAA/B;AACA,OAAO,sBAAP,C,CACA;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAElCI,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACTC,MAAAA,KAAK,EAAG;AADC,KAAX,CAFgB,CAMhB;AACD,GATiC,CAWpC;AACA;AACA;AACA;AACA;AAEA;AAEA;;;AAEAC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EADgB,CAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAKDC,EAAAA,MAAM,GAAG;AACLF,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAS,KAAKL,KAAL,CAAWO,IAAhC,EADK,CAEP;;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAqBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBA,CADF;AAyBD;;AA3EiC;;AA4EnC;;AAED,MAAMC,eAAe,GAAE,CAAC;AAACC,EAAAA,WAAD;AAAcF,EAAAA,IAAd;AAAoBG,EAAAA,KAApB;AAA2BC,EAAAA;AAA3B,CAAD,EAAoCX,KAApC,MAA6C;AAChES,EAAAA,WADgE;AAEhEF,EAAAA,IAFgE;AAGhEG,EAAAA,KAHgE;AAIhEC,EAAAA;AAJgE,CAA7C,CAAvB;;AAOA,eAAef,OAAO,CAACY,eAAD,CAAP,CAAyBV,WAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from 'react-redux';\n// import RestaurantListItem from './RestaurantListItem';\n// import InfiniteScroll from \"react-infinite-scroll-component\";\nimport {thunkRestaurants} from './actions/restaurant';\nimport './styles/Summary.css';\n// import LoadingComponent from './LoadingComponent';\n\nclass ListingPage extends Component {\n\n  constructor(props){\n    super(props);\n    this.state={\n      start : 1\n    }\n\n    // this.onScroll=this.onScroll.bind(this);\n  }\n\n//   onScroll(){\n//     var start= this.state.start +5;\n//     this.setState((state)=>({\n//       start: state.start+5,\n//   }));\n\n//     this.props.dispatch(thunkRestaurants(this.props.city, start));\n    \n//   };\n\ncomponentDidMount() {\n    console.log(\"${this.state.props}\")\n    // fetch(`https://opentable.herokuapp.com/api/restaurants?city=${this.props.city}`)\n    //   .then(res => res.json())\n    //   .then(\n    //     (result) => {\n    //       this.setState({\n    //         isLoaded: true,\n    //         items: result.items\n    //       });\n    //     },\n    //     // Note: it's important to handle errors here\n    //     // instead of a catch() block so that we don't swallow\n    //     // exceptions from actual bugs in components.\n    //     (error) => {\n    //       this.setState({\n    //         isLoaded: true,\n    //         error\n    //       });\n    //     }\n    //   )\n  }\n\n\n\n\n  render() {\n      console.log(\"Props \"+this.props.city);\n    // const error=this.props.error;\n    return (\n      <div>\n      \n      {/* {error ?<p>{error}</p>:\n        <div>\n          <div className='content-container outline page-header'>\n            <h2 className=\"page-header__title\"><small>Showing restaurants in </small>\"<strong>{this.props.city}</strong>\"</h2>\n          </div>\n          <InfiniteScroll\n              dataLength={this.props.restaurants.length}\n              next={this.onScroll}\n              hasMore={true}\n              loader={<LoadingComponent />}>\n              {\n              \n                this.props.restaurants.map((rest, index) =>{\n                  return <RestaurantListItem key={index} {...rest}  likes={this.props.likes} {...this.props}/>\n                })\n              }\n          </InfiniteScroll> \n        </div>\n        } */}\n      <h1>List</h1>\n      </div>\n    )\n  }\n};\n\nconst mapStateToProps =({restaurants, city, error, likes}, props)=>({\n    restaurants,\n    city,\n    error,\n    likes\n})\n\nexport default connect(mapStateToProps)(ListingPage);"]},"metadata":{},"sourceType":"module"}