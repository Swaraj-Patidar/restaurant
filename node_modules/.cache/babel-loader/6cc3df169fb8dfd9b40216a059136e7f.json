{"ast":null,"code":"export const fetchRestaurants = (restaurant, loader) => ({\n  type: 'FETCH_RESTAURANTS',\n  restaurant,\n  loader\n});\nexport const thunkRestaurants = (city = '', start = 1) => {\n  return (dispatch, getState) => {\n    fetch(\"https://opentable.herokuapp.com/api/restaurants?city=\" + city).then(res => res.json()).then(result => {\n      console.log(\"resultAction \" + result.restaurants);\n      dispatch(fetchRestaurants(result.restaurants, false));\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      this.setState({});\n    }); // console.log(\"City \"+city);\n  };\n};","map":{"version":3,"sources":["/home/spatidar/Desktop/React_projects/restaurant/src/actions/restaurant.js"],"names":["fetchRestaurants","restaurant","loader","type","thunkRestaurants","city","start","dispatch","getState","fetch","then","res","json","result","console","log","restaurants","error","setState"],"mappings":"AACA,OAAO,MAAMA,gBAAgB,GAAC,CAACC,UAAD,EAAYC,MAAZ,MAAuB;AACjDC,EAAAA,IAAI,EAAE,mBAD2C;AAEjDF,EAAAA,UAFiD;AAGjDC,EAAAA;AAHiD,CAAvB,CAAvB;AAMP,OAAO,MAAME,gBAAgB,GAAE,CAACC,IAAI,GAAC,EAAN,EAAUC,KAAK,GAAC,CAAhB,KAAqB;AAChD,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAuB;AAC1BC,IAAAA,KAAK,CAAC,0DAAwDJ,IAAzD,CAAL,CACCK,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAGGG,MAAD,IAAY;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAgBF,MAAM,CAACG,WAAnC;AACAT,MAAAA,QAAQ,CAACP,gBAAgB,CAACa,MAAM,CAACG,WAAR,EAAoB,KAApB,CAAjB,CAAR;AACH,KANH,EAOE;AACA;AACA;AACCC,IAAAA,KAAD,IAAW;AAET,WAAKC,QAAL,CAAc,EAAd;AAGD,KAfH,EAD0B,CAkB1B;AACH,GAnBD;AAoBH,CArBM","sourcesContent":["\nexport const fetchRestaurants=(restaurant,loader) =>({\n    type: 'FETCH_RESTAURANTS',\n    restaurant,\n    loader\n})\n\nexport const thunkRestaurants =(city='', start=1) =>{\n    return (dispatch, getState) =>{\n        fetch(\"https://opentable.herokuapp.com/api/restaurants?city=\"+city)\n        .then(res => res.json())\n        .then(\n          (result) => {\n              console.log(\"resultAction \"+result.restaurants);\n              dispatch(fetchRestaurants(result.restaurants,false));\n          },\n          // Note: it's important to handle errors here\n          // instead of a catch() block so that we don't swallow\n          // exceptions from actual bugs in components.\n          (error) => {\n              \n            this.setState({\n              \n            });\n          }\n        )        \n        // console.log(\"City \"+city);\n    }\n}"]},"metadata":{},"sourceType":"module"}