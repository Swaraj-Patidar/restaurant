{"ast":null,"code":"var _jsxFileName = \"/home/spatidar/Desktop/React_projects/restaurant/src/ListingPage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; // import RestaurantListItem from './RestaurantListItem';\n// import InfiniteScroll from \"react-infinite-scroll-component\";\n// import {thunkRestaurants} from './actions/restaurant';\n\nimport './styles/Summary.css'; // import LoadingComponent from './LoadingComponent';\n\nclass ListingPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      start: 1,\n      page_entries: '',\n      restaurants: []\n    };\n  }\n\n  componentDidMount() {//   console.log(\"mount \"+this.props.city)\n    //   fetch(\"https://opentable.herokuapp.com/api/restaurants?city=\"+this.props.city)\n    //     .then(res => res.json())\n    //     .then(\n    //       (result) => {\n    //           console.log(\"resultListing \"+result.restaurants);\n    //         this.setState({\n    //           restaurants:result.restaurants\n    //         });\n    //       },\n    //       // Note: it's important to handle errors here\n    //       // instead of a catch() block so that we don't swallow\n    //       // exceptions from actual bugs in components.\n    //       (error) => {\n    //         this.setState({\n    //         });\n    //       }\n    //     )\n    // console.log(\"length \"+this.state.restaurants.length)\n  }\n\n  render() {\n    console.log(\"renderCity \" + this.props.city);\n    console.log(\"renderLength \" + this.props.restaurants.length);\n    console.log(\"renderLoader \" + this.props.loader); // const error=this.props.error;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, this.props.restaurants.map((restaurant, i) => /*#__PURE__*/React.createElement(\"li\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, restaurant.name, \" \", restaurant.address, \" \", restaurant.price))));\n  }\n\n}\n\n;\n\nconst mapStateToProps = ({\n  restaurants,\n  city,\n  error,\n  likes,\n  loader\n}, props) => ({\n  restaurants,\n  city,\n  error,\n  likes,\n  loader\n});\n\nexport default connect(mapStateToProps)(ListingPage);","map":{"version":3,"sources":["/home/spatidar/Desktop/React_projects/restaurant/src/ListingPage.js"],"names":["React","Component","connect","ListingPage","constructor","props","state","start","page_entries","restaurants","componentDidMount","render","console","log","city","length","loader","map","restaurant","i","name","address","price","mapStateToProps","error","likes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB,C,CACA;AACA;AACA;;AACA,OAAO,sBAAP,C,CACA;;AAEA,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAElCG,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACTC,MAAAA,KAAK,EAAG,CADC;AAETC,MAAAA,YAAY,EAAC,EAFJ;AAGTC,MAAAA,WAAW,EAAC;AAHH,KAAX;AAOD;;AAIHC,EAAAA,iBAAiB,GAAG,CAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACE;;AAKFC,EAAAA,MAAM,GAAG;AAELC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAc,KAAKR,KAAL,CAAWS,IAArC;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAgB,KAAKR,KAAL,CAAWI,WAAX,CAAuBM,MAAnD;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAgB,KAAKR,KAAL,CAAWW,MAAvC,EAJK,CAKP;;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKX,KAAL,CAAWI,WAAX,CAAuBQ,GAAvB,CAA2B,CAACC,UAAD,EAAYC,CAAZ,kBAC1B;AAAI,MAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,UAAU,CAACE,IADd,OACqBF,UAAU,CAACG,OADhC,OAC0CH,UAAU,CAACI,KADrD,CADD,CADH,CAtBF,CADF;AAiCD;;AAlFiC;;AAmFnC;;AAED,MAAMC,eAAe,GAAE,CAAC;AAACd,EAAAA,WAAD;AAAcK,EAAAA,IAAd;AAAoBU,EAAAA,KAApB;AAA2BC,EAAAA,KAA3B;AAAiCT,EAAAA;AAAjC,CAAD,EAA2CX,KAA3C,MAAoD;AACvEI,EAAAA,WADuE;AAEvEK,EAAAA,IAFuE;AAGvEU,EAAAA,KAHuE;AAIvEC,EAAAA,KAJuE;AAKvET,EAAAA;AALuE,CAApD,CAAvB;;AAQA,eAAed,OAAO,CAACqB,eAAD,CAAP,CAAyBpB,WAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from 'react-redux';\n// import RestaurantListItem from './RestaurantListItem';\n// import InfiniteScroll from \"react-infinite-scroll-component\";\n// import {thunkRestaurants} from './actions/restaurant';\nimport './styles/Summary.css';\n// import LoadingComponent from './LoadingComponent';\n\nclass ListingPage extends Component {\n\n  constructor(props){\n    super(props);\n    this.state={\n      start : 1,\n      page_entries:'',\n      restaurants:[]\n\n    }\n\n  }\n\n\n\ncomponentDidMount() {\n\n  //   console.log(\"mount \"+this.props.city)\n  //   fetch(\"https://opentable.herokuapp.com/api/restaurants?city=\"+this.props.city)\n  //     .then(res => res.json())\n  //     .then(\n  //       (result) => {\n  //           console.log(\"resultListing \"+result.restaurants);\n  //         this.setState({\n  //           restaurants:result.restaurants\n  //         });\n  //       },\n  //       // Note: it's important to handle errors here\n  //       // instead of a catch() block so that we don't swallow\n  //       // exceptions from actual bugs in components.\n  //       (error) => {\n            \n  //         this.setState({\n            \n  //         });\n  //       }\n  //     )\n  // console.log(\"length \"+this.state.restaurants.length)\n   }\n\n\n\n\n  render() {\n    \n      console.log(\"renderCity \"+this.props.city);\n      console.log(\"renderLength \"+this.props.restaurants.length);\n      console.log(\"renderLoader \"+this.props.loader);\n    // const error=this.props.error;\n    return (\n      <div>\n      \n      {/* {error ?<p>{error}</p>:\n        <div>\n          <div className='content-container outline page-header'>\n            <h2 className=\"page-header__title\"><small>Showing restaurants in </small>\"<strong>{this.props.city}</strong>\"</h2>\n          </div>\n          <InfiniteScroll\n              dataLength={this.props.restaurants.length}\n              next={this.onScroll}\n              hasMore={true}\n              loader={<LoadingComponent />}>\n              {\n              \n                this.props.restaurants.map((rest, index) =>{\n                  return <RestaurantListItem key={index} {...rest}  likes={this.props.likes} {...this.props}/>\n                })\n              }\n          </InfiniteScroll> \n        </div>\n        } */}\n\n        <ul>\n          {this.props.restaurants.map((restaurant,i) => (\n            <li key={i}>\n              {restaurant.name} {restaurant.address} {restaurant.price}\n            </li>\n          ))}\n        </ul> \n\n      </div>\n    )\n  }\n};\n\nconst mapStateToProps =({restaurants, city, error, likes,loader}, props)=>({\n    restaurants,\n    city,\n    error,\n    likes,\n    loader\n})\n\nexport default connect(mapStateToProps)(ListingPage);"]},"metadata":{},"sourceType":"module"}