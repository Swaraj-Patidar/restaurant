{"ast":null,"code":"const defaultState = {\n  city: '',\n  restaurants: [],\n  likes: [],\n  //likes will store list of res_id restaurant ids\n  error: ''\n};\nexport const restaurantReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'RESET_STATE':\n      return defaultState;\n\n    case 'SET_CITY':\n      console.log(\"CITY \" + action.city);\n      return { ...state,\n        city: action.city\n      };\n\n    case 'FETCH_RESTAURANTS':\n      return { ...state,\n        restaurants: [...state.restaurants, action.restaurant]\n      };\n\n    case 'SET_LIKE':\n      let likesArr = [];\n\n      if (!action.like) {\n        //not present --at the time of page load\n        likesArr = JSON.parse(localStorage.getItem('likes'));\n      } else {\n        if (state.likes) {\n          likesArr = [...state.likes, action.like];\n        } else {\n          likesArr = [action.like];\n        }\n\n        localStorage.setItem('likes', JSON.stringify(likesArr));\n      }\n\n      return { ...state,\n        likes: likesArr\n      };\n\n    case 'UNSET_LIKE':\n      const likesUpdated = state.likes.filter(like => {\n        return like !== action.like;\n      });\n      localStorage.setItem('likes', JSON.stringify(likesUpdated));\n      return { ...state,\n        likes: likesUpdated\n      };\n\n    case 'SET_ERROR':\n      return { ...state,\n        error: action.error\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/spatidar/Desktop/React_projects/restaurant/src/reducers/restaurant.js"],"names":["defaultState","city","restaurants","likes","error","restaurantReducer","state","action","type","console","log","restaurant","likesArr","like","JSON","parse","localStorage","getItem","setItem","stringify","likesUpdated","filter"],"mappings":"AAAA,MAAMA,YAAY,GAAC;AACfC,EAAAA,IAAI,EAAC,EADU;AAEfC,EAAAA,WAAW,EAAC,EAFG;AAGfC,EAAAA,KAAK,EAAE,EAHQ;AAGL;AACVC,EAAAA,KAAK,EAAE;AAJQ,CAAnB;AAOA,OAAO,MAAMC,iBAAiB,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAiC;AAE9D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,aAAL;AACI,aAAOR,YAAP;;AAEJ,SAAK,UAAL;AACIS,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAQH,MAAM,CAACN,IAA3B;AACE,aAAO,EACL,GAAGK,KADE;AAELL,QAAAA,IAAI,EAAEM,MAAM,CAACN;AAFR,OAAP;;AAKN,SAAK,mBAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEHJ,QAAAA,WAAW,EAAG,CAAC,GAAGI,KAAK,CAACJ,WAAV,EAAwBK,MAAM,CAACI,UAA/B;AAFX,OAAP;;AAKJ,SAAK,UAAL;AACI,UAAIC,QAAQ,GAAC,EAAb;;AACA,UAAG,CAACL,MAAM,CAACM,IAAX,EAAgB;AAAC;AACbD,QAAAA,QAAQ,GAAEE,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAV;AACH,OAFD,MAGI;AACA,YAAGX,KAAK,CAACH,KAAT,EAAe;AACXS,UAAAA,QAAQ,GAAC,CAAC,GAAGN,KAAK,CAACH,KAAV,EAAiBI,MAAM,CAACM,IAAxB,CAAT;AACH,SAFD,MAGI;AACAD,UAAAA,QAAQ,GAAC,CAAEL,MAAM,CAACM,IAAT,CAAT;AACH;;AACDG,QAAAA,YAAY,CAACE,OAAb,CAAqB,OAArB,EAA8BJ,IAAI,CAACK,SAAL,CAAeP,QAAf,CAA9B;AACH;;AACD,aAAO,EACH,GAAGN,KADA;AAEHH,QAAAA,KAAK,EAAES;AAFJ,OAAP;;AAMJ,SAAK,YAAL;AACI,YAAMQ,YAAY,GAAGd,KAAK,CAACH,KAAN,CAAYkB,MAAZ,CAAoBR,IAAD,IAAS;AACzB,eAAOA,IAAI,KAAGN,MAAM,CAACM,IAArB;AACH,OAFA,CAArB;AAIAG,MAAAA,YAAY,CAACE,OAAb,CAAqB,OAArB,EAA6BJ,IAAI,CAACK,SAAL,CAAeC,YAAf,CAA7B;AAEA,aAAO,EACH,GAAGd,KADA;AAEHH,QAAAA,KAAK,EAAEiB;AAFJ,OAAP;;AAKJ,SAAK,WAAL;AACI,aAAO,EACH,GAAGd,KADA;AAEHF,QAAAA,KAAK,EAAEG,MAAM,CAACH;AAFX,OAAP;;AAKJ;AACI,aAAOE,KAAP;AAxDR;AA0DH,CA5DM","sourcesContent":["const defaultState={\n    city:'', \n    restaurants:[],\n    likes: [],//likes will store list of res_id restaurant ids\n    error: ''\n};\n\nexport const restaurantReducer = (state = defaultState, action) =>{\n    \n    switch(action.type){\n        case 'RESET_STATE':\n            return defaultState;\n\n        case 'SET_CITY':\n            console.log(\"CITY \"+action.city)\n              return {\n                ...state,\n                city: action.city\n                \n            }\n        case 'FETCH_RESTAURANTS':\n            return {\n                ...state,\n                restaurants:  [...state.restaurants , action.restaurant ]\n            }\n\n        case 'SET_LIKE':\n            let likesArr=[];\n            if(!action.like){//not present --at the time of page load\n                likesArr= JSON.parse(localStorage.getItem('likes'));\n            }\n            else{\n                if(state.likes){\n                    likesArr=[...state.likes, action.like];\n                }\n                else{\n                    likesArr=[ action.like];\n                }\n                localStorage.setItem('likes', JSON.stringify(likesArr));\n            }\n            return {\n                ...state,\n                likes: likesArr\n            }\n            \n        \n        case 'UNSET_LIKE':\n            const likesUpdated = state.likes.filter((like) =>{\n                                    return like!==action.like;\n                                });\n\n            localStorage.setItem('likes',JSON.stringify(likesUpdated))\n\n            return {\n                ...state,\n                likes: likesUpdated\n            }\n\n        case 'SET_ERROR':\n            return {\n                ...state,\n                error: action.error\n            }\n\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}